	// A collection a useful tools for building Microsoft Power BI queries.
	//
	// Author:  Injae Park, Microsoft MVP
	// Repo:    https://github.com/PowerBIPark/PowerBI_MQueryTest
	// License: MIT. Code is provided as is with no warranty.
	//
	//
	//
	// How to:
	// Copy this entire code
	// And paste it into a blank query Advanced Editor
	// Rename the query "M"
	// And you can add functions by rightclicking and selecting "Add functions" to your report
	// You need to have a parameter called "Parameter2" that points to "/PowerBIPark/PowerBI_MQueryTest/main/Simple%20Date%20List.txt" 
	//
	//
	//
[
    /**
     * Provide a simplified method for programmatically contructing table from
     * relationships between columns. Accepts a list of lists of the structure:
     *
     *     {<column name>, <column generator>, <type>}
     *
     * The chain may then be fed a table containing at least one column as a
     * seed.
     *
     * :: (Table a, Record b) => [(Text, b -> c, Type)] -> a -> a
     */

Shared = [ 
Binary.ApproximateLength = Binary.ApproximateLength, 
Binary.Buffer = Binary.Buffer, 
Binary.Combine = Binary.Combine, 
Binary.Compress = Binary.Compress, 
Binary.Decompress = Binary.Decompress, 
Binary.From = Binary.From, 
Binary.FromList = Binary.FromList, 
Binary.FromText = Binary.FromText, 
Binary.InferContentType = Binary.InferContentType, 
Binary.Length = Binary.Length, 
Binary.Range = Binary.Range, 
Binary.Split = Binary.Split, 
Binary.ToList = Binary.ToList, 
Binary.ToText = Binary.ToText, 
Binary.Type = Binary.Type, 
Binary.View = Binary.View, 
Binary.ViewError = Binary.ViewError, 
Binary.ViewFunction = Binary.ViewFunction, 
Combiner.CombineTextByDelimiter = Combiner.CombineTextByDelimiter, 
Combiner.CombineTextByEachDelimiter = Combiner.CombineTextByEachDelimiter, 
Combiner.CombineTextByLengths = Combiner.CombineTextByLengths, 
Combiner.CombineTextByPositions = Combiner.CombineTextByPositions, 
Combiner.CombineTextByRanges = Combiner.CombineTextByRanges, 
Comparer.Equals = Comparer.Equals, 
Comparer.FromCulture = Comparer.FromCulture, 
Comparer.Ordinal = Comparer.Ordinal, 
Comparer.OrdinalIgnoreCase = Comparer.OrdinalIgnoreCase, 
Date.AddDays = Date.AddDays, 
Date.AddMonths = Date.AddMonths, 
Date.AddQuarters = Date.AddQuarters, 
Date.AddWeeks = Date.AddWeeks, 
Date.AddYears = Date.AddYears, 
Date.Day = Date.Day, 
Date.DayOfWeek = Date.DayOfWeek, 
Date.DayOfWeekName = Date.DayOfWeekName, 
Date.DayOfYear = Date.DayOfYear, 
Date.DaysInMonth = Date.DaysInMonth, 
Date.EndOfDay = Date.EndOfDay, 
Date.EndOfMonth = Date.EndOfMonth, 
Date.EndOfQuarter = Date.EndOfQuarter, 
Date.EndOfWeek = Date.EndOfWeek, 
Date.EndOfYear = Date.EndOfYear, 
Date.From = Date.From, 
Date.FromText = Date.FromText, 
Date.IsInCurrentDay = Date.IsInCurrentDay, 
Date.IsInCurrentMonth = Date.IsInCurrentMonth, 
Date.IsInCurrentQuarter = Date.IsInCurrentQuarter, 
Date.IsInCurrentWeek = Date.IsInCurrentWeek, 
Date.IsInCurrentYear = Date.IsInCurrentYear, 
Date.IsInNextDay = Date.IsInNextDay, 
Date.IsInNextMonth = Date.IsInNextMonth, 
Date.IsInNextNDays = Date.IsInNextNDays, 
Date.IsInNextNMonths = Date.IsInNextNMonths, 
Date.IsInNextNQuarters = Date.IsInNextNQuarters, 
Date.IsInNextNWeeks = Date.IsInNextNWeeks, 
Date.IsInNextNYears = Date.IsInNextNYears, 
Date.IsInNextQuarter = Date.IsInNextQuarter, 
Date.IsInNextWeek = Date.IsInNextWeek, 
Date.IsInNextYear = Date.IsInNextYear, 
Date.IsInPreviousDay = Date.IsInPreviousDay, 
Date.IsInPreviousMonth = Date.IsInPreviousMonth, 
Date.IsInPreviousNDays = Date.IsInPreviousNDays, 
Date.IsInPreviousNMonths = Date.IsInPreviousNMonths, 
Date.IsInPreviousNQuarters = Date.IsInPreviousNQuarters, 
Date.IsInPreviousNWeeks = Date.IsInPreviousNWeeks, 
Date.IsInPreviousNYears = Date.IsInPreviousNYears, 
Date.IsInPreviousQuarter = Date.IsInPreviousQuarter, 
Date.IsInPreviousWeek = Date.IsInPreviousWeek, 
Date.IsInPreviousYear = Date.IsInPreviousYear, 
Date.IsInYearToDate = Date.IsInYearToDate, 
Date.IsLeapYear = Date.IsLeapYear, 
Date.Month = Date.Month, 
Date.MonthName = Date.MonthName, 
Date.QuarterOfYear = Date.QuarterOfYear, 
Date.StartOfDay = Date.StartOfDay, 
Date.StartOfMonth = Date.StartOfMonth, 
Date.StartOfQuarter = Date.StartOfQuarter, 
Date.StartOfWeek = Date.StartOfWeek, 
Date.StartOfYear = Date.StartOfYear, 
Date.ToRecord = Date.ToRecord, 
Date.ToText = Date.ToText, 
Date.Type = Date.Type, 
Date.WeekOfMonth = Date.WeekOfMonth, 
Date.WeekOfYear = Date.WeekOfYear, 
Date.Year = Date.Year, 
DateTime.AddZone = DateTime.AddZone, 
DateTime.Date = DateTime.Date, 
DateTime.FixedLocalNow = DateTime.FixedLocalNow, 
DateTime.From = DateTime.From, 
DateTime.FromFileTime = DateTime.FromFileTime, 
DateTime.FromText = DateTime.FromText, 
DateTime.IsInCurrentHour = DateTime.IsInCurrentHour, 
DateTime.IsInCurrentMinute = DateTime.IsInCurrentMinute, 
DateTime.IsInCurrentSecond = DateTime.IsInCurrentSecond, 
DateTime.IsInNextHour = DateTime.IsInNextHour, 
DateTime.IsInNextMinute = DateTime.IsInNextMinute, 
DateTime.IsInNextNHours = DateTime.IsInNextNHours, 
DateTime.IsInNextNMinutes = DateTime.IsInNextNMinutes, 
DateTime.IsInNextNSeconds = DateTime.IsInNextNSeconds, 
DateTime.IsInNextSecond = DateTime.IsInNextSecond, 
DateTime.IsInPreviousHour = DateTime.IsInPreviousHour, 
DateTime.IsInPreviousMinute = DateTime.IsInPreviousMinute, 
DateTime.IsInPreviousNHours = DateTime.IsInPreviousNHours, 
DateTime.IsInPreviousNMinutes = DateTime.IsInPreviousNMinutes, 
DateTime.IsInPreviousNSeconds = DateTime.IsInPreviousNSeconds, 
DateTime.IsInPreviousSecond = DateTime.IsInPreviousSecond, 
DateTime.LocalNow = DateTime.LocalNow, 
DateTime.Time = DateTime.Time, 
DateTime.ToRecord = DateTime.ToRecord, 
DateTime.ToText = DateTime.ToText, 
DateTime.Type = DateTime.Type, 
DateTimeZone.FixedLocalNow = DateTimeZone.FixedLocalNow, 
DateTimeZone.FixedUtcNow = DateTimeZone.FixedUtcNow, 
DateTimeZone.From = DateTimeZone.From, 
DateTimeZone.FromFileTime = DateTimeZone.FromFileTime, 
DateTimeZone.FromText = DateTimeZone.FromText, 
DateTimeZone.LocalNow = DateTimeZone.LocalNow, 
DateTimeZone.RemoveZone = DateTimeZone.RemoveZone, 
DateTimeZone.SwitchZone = DateTimeZone.SwitchZone, 
DateTimeZone.ToLocal = DateTimeZone.ToLocal, 
DateTimeZone.ToRecord = DateTimeZone.ToRecord, 
DateTimeZone.ToText = DateTimeZone.ToText, 
DateTimeZone.ToUtc = DateTimeZone.ToUtc, 
DateTimeZone.Type = DateTimeZone.Type, 
DateTimeZone.UtcNow = DateTimeZone.UtcNow, 
DateTimeZone.ZoneHours = DateTimeZone.ZoneHours, 
DateTimeZone.ZoneMinutes = DateTimeZone.ZoneMinutes, 
Decimal.From = Decimal.From, 
Decimal.Type = Decimal.Type, 
Diagnostics.ActivityId = Diagnostics.ActivityId, 
Diagnostics.CorrelationId = Diagnostics.CorrelationId, 
Diagnostics.Trace = Diagnostics.Trace, 
Double.From = Double.From, 
Double.Type = Double.Type, 
Duration.Days = Duration.Days, 
Duration.From = Duration.From, 
Duration.FromText = Duration.FromText, 
Duration.Hours = Duration.Hours, 
Duration.Minutes = Duration.Minutes, 
Duration.Seconds = Duration.Seconds, 
Duration.ToRecord = Duration.ToRecord, 
Duration.TotalDays = Duration.TotalDays, 
Duration.TotalHours = Duration.TotalHours, 
Duration.TotalMinutes = Duration.TotalMinutes, 
Duration.TotalSeconds = Duration.TotalSeconds, 
Duration.ToText = Duration.ToText, 
Duration.Type = Duration.Type, 
Expression.Constant = Expression.Constant, 
Expression.Identifier = Expression.Identifier, 
Function.From = Function.From, 
Function.Invoke = Function.Invoke, 
Function.InvokeAfter = Function.InvokeAfter, 
Function.InvokeWithErrorContext = Function.InvokeWithErrorContext, 
Function.IsDataSource = Function.IsDataSource, 
Function.ScalarVector = Function.ScalarVector, 
Function.Type = Function.Type, 
Lines.FromBinary = Lines.FromBinary, 
Lines.FromText = Lines.FromText, 
Lines.ToBinary = Lines.ToBinary, 
Lines.ToText = Lines.ToText, 
List.Accumulate = List.Accumulate, 
List.AllTrue = List.AllTrue, 
List.Alternate = List.Alternate, 
List.AnyTrue = List.AnyTrue, 
List.Average = List.Average, 
List.Buffer = List.Buffer, 
List.Combine = List.Combine, 
List.ConformToPageReader = List.ConformToPageReader, 
List.Contains = List.Contains, 
List.ContainsAll = List.ContainsAll, 
List.ContainsAny = List.ContainsAny, 
List.Count = List.Count, 
List.Covariance = List.Covariance, 
List.Dates = List.Dates,
List.DateTimes = List.DateTimes, 
List.DateTimeZones = List.DateTimeZones, 
List.Difference = List.Difference, 
List.Distinct = List.Distinct, 
List.Durations = List.Durations, 
List.FindText = List.FindText, 
List.First = List.First, 
List.FirstN = List.FirstN, 
List.Generate = List.Generate, 
List.InsertRange = List.InsertRange, 
List.Intersect = List.Intersect, 
List.IsDistinct = List.IsDistinct, 
List.IsEmpty = List.IsEmpty, 
List.Last = List.Last, 
List.LastN = List.LastN, 
List.MatchesAll = List.MatchesAll, 
List.MatchesAny = List.MatchesAny, 
List.Max = List.Max, 
List.MaxN = List.MaxN, 
List.Median = List.Median, 
List.Min = List.Min, 
List.MinN = List.MinN, 
List.Mode = List.Mode, 
List.Modes = List.Modes, 
List.NonNullCount = List.NonNullCount, 
List.Numbers = List.Numbers, 
List.Percentile = List.Percentile, 
List.PositionOf = List.PositionOf, 
List.PositionOfAny = List.PositionOfAny, 
List.Positions = List.Positions, 
List.Product = List.Product, 
List.Random = List.Random, 
List.Range = List.Range, 
List.RemoveFirstN = List.RemoveFirstN, 
List.RemoveItems = List.RemoveItems, 
List.RemoveLastN = List.RemoveLastN, 
List.RemoveMatchingItems = List.RemoveMatchingItems, 
List.RemoveNulls = List.RemoveNulls, 
List.RemoveRange = List.RemoveRange, 
List.Repeat = List.Repeat, 
List.ReplaceMatchingItems = List.ReplaceMatchingItems, 
List.ReplaceRange = List.ReplaceRange, 
List.ReplaceValue = List.ReplaceValue, 
List.Reverse = List.Reverse, 
List.Select = List.Select, 
List.Single = List.Single, 
List.SingleOrDefault = List.SingleOrDefault, 
List.Skip = List.Skip, 
List.Sort = List.Sort, 
List.Split = List.Split, 
List.StandardDeviation = List.StandardDeviation, 
List.Sum = List.Sum, 
List.Times = List.Times, 
List.Transform = List.Transform, 
List.TransformMany = List.TransformMany, 
List.Type = List.Type, 
List.Union = List.Union, 
List.Zip = List.Zip, 
Logical.From = Logical.From, 
Logical.FromText = Logical.FromText, 
Logical.ToText = Logical.ToText, 
Logical.Type = Logical.Type, 
Number.Abs = Number.Abs, 
Number.Acos = Number.Acos, 
Number.Asin = Number.Asin, 
Number.Atan = Number.Atan, 
Number.Atan2 = Number.Atan2, 
Number.BitwiseAnd = Number.BitwiseAnd, 
Number.BitwiseNot = Number.BitwiseNot, 
Number.BitwiseOr = Number.BitwiseOr, 
Number.BitwiseShiftLeft = Number.BitwiseShiftLeft, 
Number.BitwiseShiftRight = Number.BitwiseShiftRight, 
Number.BitwiseXor = Number.BitwiseXor, 
Number.Combinations = Number.Combinations, 
Number.Cos = Number.Cos, 
Number.Cosh = Number.Cosh, 
Number.E = Number.E, 
Number.Epsilon = Number.Epsilon, 
Number.Exp = Number.Exp, 
Number.Factorial = Number.Factorial, 
Number.From = Number.From, 
Number.FromText = Number.FromText, 
Number.IntegerDivide = Number.IntegerDivide, 
Number.IsEven = Number.IsEven, 
Number.IsNaN = Number.IsNaN, 
Number.IsOdd = Number.IsOdd, 
Number.Ln = Number.Ln, 
Number.Log = Number.Log, 
Number.Log10 = Number.Log10, 
Number.Mod = Number.Mod, 
Number.NaN = Number.NaN, 
Number.NegativeInfinity = Number.NegativeInfinity, 
Number.Permutations = Number.Permutations, 
Number.PI = Number.PI, 
Number.PositiveInfinity = Number.PositiveInfinity, 
Number.Power = Number.Power, 
Number.Random = Number.Random, 
Number.RandomBetween = Number.RandomBetween, 
Number.Round = Number.Round, 
Number.RoundAwayFromZero = Number.RoundAwayFromZero, 
Number.RoundDown = Number.RoundDown, 
Number.RoundTowardZero = Number.RoundTowardZero, 
Number.RoundUp = Number.RoundUp, 
Number.Sign = Number.Sign, 
Number.Sin = Number.Sin, 
Number.Sinh = Number.Sinh, 
Number.Sqrt = Number.Sqrt, 
Number.Tan = Number.Tan, 
Number.Tanh = Number.Tanh, 
Number.ToText = Number.ToText, 
Number.Type = Number.Type, 
Record.AddField = Record.AddField, 
Record.Combine = Record.Combine, 
Record.Field = Record.Field, 
Record.FieldCount = Record.FieldCount, 
Record.FieldNames = Record.FieldNames, 
Record.FieldOrDefault = Record.FieldOrDefault, 
Record.FieldValues = Record.FieldValues, 
Record.FromList = Record.FromList, 
Record.FromTable = Record.FromTable, 
Record.HasFields = Record.HasFields, 
Record.RemoveFields = Record.RemoveFields, 
Record.RenameFields = Record.RenameFields, 
Record.ReorderFields = Record.ReorderFields, 
Record.SelectFields = Record.SelectFields, 
Record.ToList = Record.ToList, 
Record.ToTable = Record.ToTable, 
Record.TransformFields = Record.TransformFields, 
Record.Type = Record.Type, 
Replacer.ReplaceText = Replacer.ReplaceText, 
Replacer.ReplaceValue = Replacer.ReplaceValue, 
Splitter.SplitByNothing = Splitter.SplitByNothing, 
Splitter.SplitTextByAnyDelimiter = Splitter.SplitTextByAnyDelimiter, 
Splitter.SplitTextByCharacterTransition = Splitter.SplitTextByCharacterTransition, 
Splitter.SplitTextByDelimiter = Splitter.SplitTextByDelimiter, 
Splitter.SplitTextByEachDelimiter = Splitter.SplitTextByEachDelimiter, 
Splitter.SplitTextByLengths = Splitter.SplitTextByLengths, 
Splitter.SplitTextByPositions = Splitter.SplitTextByPositions, 
Splitter.SplitTextByRanges = Splitter.SplitTextByRanges, 
Splitter.SplitTextByRepeatedLengths = Splitter.SplitTextByRepeatedLengths, 
Splitter.SplitTextByWhitespace = Splitter.SplitTextByWhitespace, 
Table.AddColumn = Table.AddColumn, 
Table.AddFuzzyClusterColumn = Table.AddFuzzyClusterColumn, 
Table.AddIndexColumn = Table.AddIndexColumn, 
Table.AddJoinColumn = Table.AddJoinColumn, 
Table.AddKey = Table.AddKey, 
Table.AddRankColumn = Table.AddRankColumn, 
Table.AggregateTableColumn = Table.AggregateTableColumn, 
Table.AlternateRows = Table.AlternateRows, 
Table.ApproximateRowCount = Table.ApproximateRowCount, 
Table.Buffer = Table.Buffer, 
Table.Column = Table.Column, 
Table.ColumnCount = Table.ColumnCount, 
Table.ColumnNames = Table.ColumnNames, 
Table.ColumnsOfType = Table.ColumnsOfType, 
Table.Combine = Table.Combine, 
Table.CombineColumns = Table.CombineColumns, 
Table.CombineColumnsToRecord = Table.CombineColumnsToRecord, 
Table.ConformToPageReader = Table.ConformToPageReader, 
Table.Contains = Table.Contains, 
Table.ContainsAll = Table.ContainsAll, 
Table.ContainsAny = Table.ContainsAny, 
Table.DemoteHeaders = Table.DemoteHeaders, 
Table.Distinct = Table.Distinct, 
Table.DuplicateColumn = Table.DuplicateColumn, 
Table.ExpandListColumn = Table.ExpandListColumn, 
Table.ExpandRecordColumn = Table.ExpandRecordColumn, 
Table.ExpandTableColumn = Table.ExpandTableColumn, 
Table.FillDown = Table.FillDown, 
Table.FillUp = Table.FillUp, 
Table.FilterWithDataTable = Table.FilterWithDataTable, 
Table.FindText = Table.FindText, 
Table.First = Table.First, 
Table.FirstN = Table.FirstN, 
Table.FirstValue = Table.FirstValue, 
Table.FromColumns = Table.FromColumns, 
Table.FromList = Table.FromList, 
Table.FromPartitions = Table.FromPartitions, 
Table.FromRecords = Table.FromRecords, 
Table.FromRows = Table.FromRows, 
Table.FromValue = Table.FromValue, 
Table.FuzzyGroup = Table.FuzzyGroup, 
Table.FuzzyJoin = Table.FuzzyJoin, 
Table.FuzzyNestedJoin = Table.FuzzyNestedJoin, 
Table.Group = Table.Group, 
Table.HasColumns = Table.HasColumns, 
Table.InsertRows = Table.InsertRows, 
Table.IsDistinct = Table.IsDistinct, 
Table.IsEmpty = Table.IsEmpty, 
Table.Join = Table.Join, 
Table.Keys = Table.Keys, 
Table.Last = Table.Last, 
Table.LastN = Table.LastN, 
Table.MatchesAllRows = Table.MatchesAllRows, 
Table.MatchesAnyRows = Table.MatchesAnyRows, 
Table.Max = Table.Max, 
Table.MaxN = Table.MaxN, 
Table.Min = Table.Min, 
Table.MinN = Table.MinN, 
Table.NestedJoin = Table.NestedJoin, 
Table.Partition = Table.Partition, 
Table.PartitionValues = Table.PartitionValues, 
Table.Pivot = Table.Pivot, 
Table.PositionOf = Table.PositionOf, 
Table.PositionOfAny = Table.PositionOfAny, 
Table.PrefixColumns = Table.PrefixColumns, 
Table.Profile = Table.Profile, 
Table.PromoteHeaders = Table.PromoteHeaders, 
Table.Range = Table.Range, 
Table.RemoveColumns = Table.RemoveColumns, 
Table.RemoveFirstN = Table.RemoveFirstN, 
Table.RemoveLastN = Table.RemoveLastN, 
Table.RemoveMatchingRows = Table.RemoveMatchingRows, 
Table.RemoveRows = Table.RemoveRows, 
Table.RemoveRowsWithErrors = Table.RemoveRowsWithErrors, 
Table.RenameColumns = Table.RenameColumns, 
Table.ReorderColumns = Table.ReorderColumns, 
Table.Repeat = Table.Repeat, 
Table.ReplaceErrorValues = Table.ReplaceErrorValues, 
Table.ReplaceKeys = Table.ReplaceKeys, 
Table.ReplaceMatchingRows = Table.ReplaceMatchingRows, 
Table.ReplaceRelationshipIdentity = Table.ReplaceRelationshipIdentity, 
Table.ReplaceRows = Table.ReplaceRows, 
Table.ReplaceValue = Table.ReplaceValue, 
Table.ReverseRows = Table.ReverseRows, 
Table.RowCount = Table.RowCount, 
Table.Schema = Table.Schema, 
Table.SelectColumns = Table.SelectColumns, 
Table.SelectRows = Table.SelectRows, 
Table.SelectRowsWithErrors = Table.SelectRowsWithErrors, 
Table.SingleRow = Table.SingleRow, 
Table.Skip = Table.Skip, 
Table.Sort = Table.Sort, 
Table.Split = Table.Split, 
Table.SplitAt = Table.SplitAt, 
Table.SplitColumn = Table.SplitColumn, 
Table.StopFolding = Table.StopFolding, 
Table.ToColumns = Table.ToColumns, 
Table.ToList = Table.ToList, 
Table.ToRecords = Table.ToRecords, 
Table.ToRows = Table.ToRows, 
Table.TransformColumnNames = Table.TransformColumnNames, 
Table.TransformColumns = Table.TransformColumns, 
Table.TransformColumnTypes = Table.TransformColumnTypes, 
Table.TransformRows = Table.TransformRows, 
Table.Transpose = Table.Transpose, 
Table.Type = Table.Type, 
Table.Unpivot = Table.Unpivot, 
Table.UnpivotOtherColumns = Table.UnpivotOtherColumns, 
Table.View = Table.View, 
Table.ViewError = Table.ViewError, 
Table.ViewFunction = Table.ViewFunction, 
Table.WithErrorContext = Table.WithErrorContext, 
Text.AfterDelimiter = Text.AfterDelimiter, 
Text.At = Text.At, 
Text.BeforeDelimiter = Text.BeforeDelimiter, 
Text.BetweenDelimiters = Text.BetweenDelimiters, 
Text.Clean = Text.Clean, 
Text.Combine = Text.Combine, 
Text.Contains = Text.Contains, 
Text.End = Text.End, 
Text.EndsWith = Text.EndsWith, 
Text.Format = Text.Format, 
Text.From = Text.From, 
Text.FromBinary = Text.FromBinary, 
Text.InferNumberType = Text.InferNumberType, 
Text.Insert = Text.Insert, 
Text.Length = Text.Length, 
Text.Lower = Text.Lower, 
Text.Middle = Text.Middle, 
Text.NewGuid = Text.NewGuid, 
Text.PadEnd = Text.PadEnd, 
Text.PadStart = Text.PadStart, 
Text.PositionOf = Text.PositionOf, 
Text.PositionOfAny = Text.PositionOfAny, 
Text.Proper = Text.Proper, 
Text.Range = Text.Range, 
Text.Remove = Text.Remove, 
Text.RemoveRange = Text.RemoveRange, 
Text.Repeat = Text.Repeat, 
Text.Replace = Text.Replace, 
Text.ReplaceRange = Text.ReplaceRange, 
Text.Reverse = Text.Reverse, 
Text.Select = Text.Select, 
Text.Split = Text.Split, 
Text.SplitAny = Text.SplitAny, 
Text.Start = Text.Start, 
Text.StartsWith = Text.StartsWith, 
Text.ToBinary = Text.ToBinary, 
Text.ToList = Text.ToList, 
Text.Trim = Text.Trim, 
Text.TrimEnd = Text.TrimEnd, 
Text.TrimStart = Text.TrimStart, 
Text.Type = Text.Type, 
Text.Upper = Text.Upper, 
Time.EndOfHour = Time.EndOfHour, 
Time.From = Time.From, 
Time.FromText = Time.FromText, 
Time.Hour = Time.Hour, 
Time.Minute = Time.Minute, 
Time.Second = Time.Second, 
Time.StartOfHour = Time.StartOfHour, 
Time.ToRecord = Time.ToRecord, 
Time.ToText = Time.ToText, 
Time.Type = Time.Type, 
Type.AddTableKey = Type.AddTableKey, 
Type.ClosedRecord = Type.ClosedRecord, 
Type.Facets = Type.Facets, 
Type.ForFunction = Type.ForFunction, 
Type.ForRecord = Type.ForRecord, 
Type.FunctionParameters = Type.FunctionParameters, 
Type.FunctionRequiredParameters = Type.FunctionRequiredParameters, 
Type.FunctionReturn = Type.FunctionReturn, 
Type.Is = Type.Is, 
Type.IsNullable = Type.IsNullable, 
Type.IsOpenRecord = Type.IsOpenRecord, 
Type.ListItem = Type.ListItem, 
Type.NonNullable = Type.NonNullable, 
Type.OpenRecord = Type.OpenRecord, 
Type.RecordFields = Type.RecordFields, 
Type.ReplaceFacets = Type.ReplaceFacets, 
Type.ReplaceTableKeys = Type.ReplaceTableKeys, 
Type.TableColumn = Type.TableColumn, 
Type.TableKeys = Type.TableKeys, 
Type.TableRow = Type.TableRow, 
Type.TableSchema = Type.TableSchema, 
Type.Type = Type.Type, 
Type.Union = Type.Union, 
Uri.BuildQueryString = Uri.BuildQueryString, 
Uri.Combine = Uri.Combine, 
Uri.EscapeDataString = Uri.EscapeDataString, 
Uri.Parts = Uri.Parts, 
Uri.Type = Uri.Type, 
Value.Add = Value.Add, 
Value.Alternates = Value.Alternates, 
Value.As = Value.As, 
Value.Compare = Value.Compare, 
Value.Divide = Value.Divide, 
Value.Equals = Value.Equals, 
Value.Expression = Value.Expression, 
Value.Firewall = Value.Firewall, 
Value.FromText = Value.FromText, 
Value.Is = Value.Is, 
Value.Lineage = Value.Lineage, 
Value.Metadata = Value.Metadata, 
Value.Multiply = Value.Multiply, 
Value.NativeQuery = Value.NativeQuery, 
Value.NullableEquals = Value.NullableEquals, 
Value.Optimize = Value.Optimize, 
Value.RemoveMetadata = Value.RemoveMetadata, 
Value.ReplaceMetadata = Value.ReplaceMetadata, 
Value.ReplaceType = Value.ReplaceType, 
Value.ResourceExpression = Value.ResourceExpression, 
Value.Subtract = Value.Subtract, 
Value.Traits = Value.Traits, 
Value.Type = Value.Type, 
Value.VersionIdentity = Value.VersionIdentity, 
Value.Versions = Value.Versions, 
Value.ViewError = Value.ViewError, 
Value.ViewFunction = Value.ViewFunction
],

    DateList = let
    Source = List.Dates(                      // Creates a list of dates
     #date( 2021, 10, 15 ),        // Starting from Oct 15th 2021
     2,                            // Creating 5 steps
     #duration( 1, 0, 0, 0 )       // Of 1 Day
 )
in
    Source,

    /**
     * Check if all elements of a list satisfy a given predicate.
     *
     * :: (a -> Bool) -> [a] -> Bool
     */
    All = (p as function) =>
        (xs as list) =>
            And(Map(p, xs)),

    /**
     * Logical conjunction of a list of boolean values.
     *
     * :: [Bool] -> Bool
     */
    And = List.AllTrue,

    /**
     * Check if any elements of a list satisfy a given predicate.
     *
     * :: (a -> Bool) -> [a] -> Bool
     */
    Any = (p as function) =>
        (xs as list) =>
            Or(Map(p, xs))
]
